--- kdebase-3.0.8/konsole/konsole/konsole.cpp.orig	Sun Sep 15 23:08:53 2002
+++ kdebase-3.0.8/konsole/konsole/konsole.cpp	Tue Oct 15 02:19:58 2002
@@ -792,8 +792,7 @@
                          SLOT( slotSaveSessionsProfile() ), m_shortcuts, "save_sessions_profile" );
 
   //help menu
-  m_help->setAccel(QKeySequence(),m_help->idAt(0));
-
+  
   m_closeSession = new KAction(i18n("C&lose Session"), "fileclose", 0, this,
                                SLOT(closeCurrentSession()), m_shortcuts, "close_session");
   m_quit = new KAction(i18n("&Quit"), "exit", 0, this, SLOT( close() ), m_shortcuts, "quit");
@@ -1068,7 +1067,7 @@
 
       // Options that should be applied to all sessions /////////////
       // (1) set menu items and Konsole members
-      QFont tmpFont("fixed");
+      QFont tmpFont( KGlobalSettings::fixedFont() );
       defaultFont = config->readFontEntry("defaultfont", &tmpFont);
       setFont(QMIN(config->readUnsignedNumEntry("font",3),TOPFONT));
 
@@ -1856,7 +1855,7 @@
 
 QString Konsole::newSession(KSimpleConfig *co, QString program, const QStrList &args, const QString &_term,const QString &_icon,const QString &_title, const QString &_cwd)
 {
-  QString emu = "xterm";
+  QString emu = "xterm-color";
   QString icon = "openterm";
   QString key;
   QString sch = s_kconfigSchema;
--- kdebase-3.0.8/konsole/konsole/main.cpp.orig	Sun Sep 15 23:08:53 2002
+++ kdebase-3.0.8/konsole/konsole/main.cpp	Tue Oct 15 02:26:19 2002
@@ -40,7 +40,7 @@
    { "name <name>",     I18N_NOOP("Set window class"), 0 },
    { "ls",              I18N_NOOP("Start login shell"), 0 },
    { "T <title>",       I18N_NOOP("Set the window title"), 0 },
-   { "tn <terminal>",   I18N_NOOP("Specify terminal type as set in the TERM\nenvironment variable"), "xterm" },
+   { "tn <terminal>",   I18N_NOOP("Specify terminal type as set in the TERM\nenvironment variable"), "xterm-color" },
    { "xwin",            I18N_NOOP("ignored"), 0 },
    { "noclose",         I18N_NOOP("Do not close Konsole when command exits"), 0 },
    { "nohist",          I18N_NOOP("Do not save lines in history"), 0 },
--- kdebase-3.0.8/konsole/konsole/konsole_part.cpp.orig	Sun Sep 15 23:08:53 2002
+++ kdebase-3.0.8/konsole/konsole/konsole_part.cpp	Tue Oct 15 02:29:30 2002
@@ -165,7 +165,7 @@
   te->setMinimumSize(150,70);    // allow resizing, cause resize in TEWidget
 
   setWidget(te);
-  se = new TESession(te,shell,eargs,"xterm");
+  se = new TESession(te,shell,eargs,"xterm-color");
   connect( se,SIGNAL(done(TESession*)),
            this,SLOT(doneSession(TESession*)) );
   connect( se,SIGNAL(openURLRequest(const QString &)),
--- kdebase-3.0.8/konsole/konsole/TEPty.cpp.orig	Sun Sep 15 23:08:53 2002
+++ kdebase-3.0.8/konsole/konsole/TEPty.cpp	Tue Oct 15 02:36:30 2002
@@ -70,6 +70,7 @@
 #endif
 
 #if defined(HAVE_GRANTPT) && defined(HAVE_PTSNAME) && defined(HAVE_UNLOCKPT) && !defined(_XOPEN_SOURCE) && !defined(__svr4__)
+#define __USE_XOPEN
 #define _XOPEN_SOURCE // make stdlib.h offer the above fcts
 #endif
 
--- kdebase-3.0.8/konsole/konsole/TEmulation.cpp.orig	Sun Sep 15 23:08:53 2002
+++ kdebase-3.0.8/konsole/konsole/TEmulation.cpp	Tue Oct 15 02:46:15 2002
@@ -477,6 +477,7 @@
     //kdDebug(1211)<<"TEmulation::setConnect() onImageSize..."<<endl;
     onImageSizeChange(gui->Lines(), gui->Columns());  // calls showBulk();
     //kdDebug(1211)<<"TEmulation::setConnect() done"<<endl;
+    gui->update();
   }
 }
 
@@ -511,6 +512,7 @@
   if (!connected) return;
   scr->setHistCursor(cursor);
   showBulk();
+  gui->update();
 }
 
 void TEmulation::setColumns(int columns)
--- kdebase-3.0.8/konsole/konsole/TEWidget.cpp.orig	Sun Sep 15 23:08:53 2002
+++ kdebase-3.0.8/konsole/konsole/TEWidget.cpp	Tue Oct 15 03:00:30 2002
@@ -71,6 +71,7 @@
 #include <knotifyclient.h>
 #include <kglobalsettings.h>
 #include <kurldrag.h>
+#include <iostream>
 
 #ifndef HERE
 #define HERE printf("%s(%d): %s\n",__FILE__,__LINE__,__FUNCTION__)
@@ -463,6 +464,11 @@
   paint.begin( this );
 HCNT("setImage");
 
+  /*std::cerr << "---> setImage " 
+    << std::endl;*/
+
+  paint.setClipRegion( contentsRect() );
+
   QPoint tL  = contentsRect().topLeft();
   int    tLx = tL.x();
   int    tLy = tL.y();
@@ -522,6 +528,7 @@
   drawFrame( &paint );
   paint.end();
   setUpdatesEnabled(true);
+  //repaint(visibleRect(), TRUE);
   if ( hasBlinker && !blinkT->isActive()) blinkT->start(1000); // 1000 ms
   if (!hasBlinker && blinkT->isActive()) { blinkT->stop(); blinking = false; }
   delete [] disstrU;
@@ -594,8 +601,21 @@
   // number of characters in `resizeEvent'. The paint rectangle
   // can thus be larger than the image, but less then the size
   // of one character.
+  
+  /*std::cerr << "---> paintEvent " 
+           << "(" << pe->rect().left() << "," << pe->rect().top() << ") " 
+	   << "(" << pe->rect().right() << "," << pe->rect().bottom() << ") " 
+	   << std::endl;*/
 
   QRect rect = pe->rect().intersect(contentsRect());
+  
+  /*std::cerr << "---> intersect " 
+	   << "(" << rect.left() << "," << rect.top() << ") " 
+	   << "(" << rect.right() << "," << rect.bottom() << ") " 
+	   << std::endl;*/
+
+  paint.save();
+  paint.setClipRegion( rect );
 
   QPoint tL  = contentsRect().topLeft();
   int    tLx = tL.x();
@@ -647,7 +667,11 @@
     }
   }
   delete [] disstrU;
+  paint.restore();
+  paint.save();
+  paint.setClipRegion( pe->region().intersect(frameRect()) );
   drawFrame( &paint );
+  paint.restore();
   paint.end();
   setUpdatesEnabled(true);
 }
@@ -797,6 +821,7 @@
 
   line_selection_mode = false;
   word_selection_mode = false;
+  preserve_line_breaks = TRUE;
 
   QPoint pos = QPoint((ev->x()-tLx-bX+(font_w/2))/font_w,(ev->y()-tLy-bY)/font_h);
 
